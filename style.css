/* Asegura que el dropdown del navbar se muestre por encima de overlays y se vea correctamente */
.modern-navbar .dropdown-menu {
  z-index: 9999 !important;
  position: absolute;
  border-radius: 10px;
  box-shadow: 0 6px 24px 0 rgba(23,195,178,0.18);
  margin-top: 0.5rem;
  min-width: 180px;
  background: var(--card-bg);
  color: var(--text-color);
  border: none;
  overflow: visible;
}
.modern-navbar .dropdown-menu .dropdown-item {
  color: var(--primary-color);
  font-weight: 500;
  border-radius: 6px;
  transition: background 0.2s, color 0.2s;
}
.modern-navbar .dropdown-menu .dropdown-item:hover {
  background: var(--secondary-color);
  color: var(--white-color);
}
/* Modern vibrant navbar styles */
.modern-navbar {
  /* Usar variables para que el navbar refleje el color primario/secundario global */
  background: linear-gradient(90deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  border: none;
  box-shadow: 0 4px 24px 0 rgba(23,195,178,0.15);
  transition: background 0.3s;
  position: relative;

}
.modern-navbar .navbar-brand {
  color: var(--white-color) !important;
  letter-spacing: 1px;
}
.modern-navbar .material-icons {
  color: var(--white-color);
}
.modern-navbar .navbar-toggler {
  background: rgba(255,255,255,0.1);
  border-radius: 8px;
  transition: background 0.2s;
}
.modern-navbar .navbar-toggler:focus {
  background: rgba(255,255,255,0.2);
}
.modern-navbar .navbar-nav .nav-link {
  color: var(--white-color);
  font-weight: 500;
  border-radius: 6px;
  padding: 0.5rem 1rem;
  transition: background 0.2s, color 0.2s;
}
.modern-navbar .navbar-nav .nav-link.active,
.modern-navbar .navbar-nav .nav-link:hover {
  background: rgba(255,255,255,0.18);
  color: var(--accent-color) !important;
}
.modern-navbar .btn-gradient {
  /* usar variables para mantener consistencia con la paleta global */
  background: linear-gradient(90deg, var(--primary-color) 0%, var(--secondary-color) 100%);
  color: var(--text-color);
  border: none;
  font-weight: 600;
  border-radius: 8px;
  box-shadow: 0 2px 8px 0 rgba(23,195,178,0.10);
  transition: background 0.2s, color 0.2s;
}
.modern-navbar .btn-gradient:hover {
  background: linear-gradient(90deg, var(--secondary-color) 0%, var(--primary-color) 100%);
  color: var(--primary-color);
}
.modern-navbar .glassy-input {
  background: rgba(255,255,255,0.25);
  border: none;
  color: var(--text-color);
  border-radius: 8px;
  box-shadow: 0 1px 4px 0 rgba(0,0,0,0.04);
  transition: background 0.2s;
}
.modern-navbar .glassy-input:focus {
  background: rgba(255,255,255,0.4);
  outline: none;
}


/* ======= RESET ======= */
* { box-sizing: border-box; margin:0; padding:0; }

/* ======= BODY ======= */
body {
  font-family: "Segoe UI", sans-serif;
  background-color: var(--bg-color);
  color: var(--text-color);
  display: flex;
  transition: background 0.3s, color 0.3s;
}

/* Lock scroll when mobile menu is open */
body.menu-open { overflow: hidden; }

/* ======= DARK MODE ======= */
/* ======= DARK MODE ======= */
body.dark {
  /* Redefinir la paleta clave en HSL cuando esté en modo oscuro.
     Usamos variables HSL para un control más preciso de tono/saturación/luminosidad
     y mantenemos las variables --dark-* por compatibilidad con reglas existentes. */
  
  /* Colores base invertidos usando HSL */
  --primary-color: hsl(208, 100%, 70%);      /* azul más claro para contraste */
  --secondary-color: hsl(174, 63%, 60%);     /* aqua/teal más claro */
  --text-color: hsl(0, 0%, 96%);             /* casi blanco */
  --bg-color: hsl(210, 12%, 8%);             /* fondo principal oscuro */
  --card-bg: hsl(210, 10%, 14%);             /* fondo de tarjetas */
  --border-color: hsl(0, 0%, 26%);           /* bordes en oscuro */
  --success-color: hsl(134, 61%, 55%);       /* verde éxito más claro */
  --danger-color: hsl(1, 70%, 65%);          /* rojo peligro más claro */

  /* Colores invertidos para botones usando cálculos HSL - Mejor contraste */
  /* Derivar fondos de botones en modo oscuro desde las variables HSL
    principales para que sean dinámicos cuando JS actualiza --h-primary, etc. */
  --btn-primary-bg: color-mix(in srgb, hsl(var(--h-primary)) 60%, black 20%);
  --btn-primary-hover: color-mix(in srgb, hsl(var(--h-primary)) 50%, black 10%);
  --btn-secondary-bg: color-mix(in srgb, hsl(var(--h-secondary)) 60%, black 20%);
  --btn-secondary-hover: color-mix(in srgb, hsl(var(--h-secondary)) 50%, black 10%);
  --btn-success-bg: color-mix(in srgb, hsl(var(--h-success)) 60%, black 20%);
  --btn-success-hover: color-mix(in srgb, hsl(var(--h-success)) 50%, black 10%);
  --btn-warning-bg: color-mix(in srgb, hsl(var(--h-accent)) 60%, black 20%);
  --btn-warning-hover: color-mix(in srgb, hsl(var(--h-accent)) 50%, black 10%);
  --btn-danger-bg: color-mix(in srgb, hsl(var(--h-danger)) 60%, black 20%);
  --btn-danger-hover: color-mix(in srgb, hsl(var(--h-danger)) 50%, black 10%);

  /* Mantener las variables dark-* existentes para compatibilidad */
  --dark-bg-color: var(--bg-color);
  --dark-card-bg: var(--card-bg);
  --dark-text-color: var(--text-color);
  --dark-border-color: var(--border-color);

  /* Aplicar los colores basados en las variables HSL */
  background-color: var(--bg-color);
  color: var(--text-color);
}

/* Ensure some components invert correctly in dark mode */
/* Collapse content: use dark card background, dark text and borders */
body.dark .collapse-content,
body.dark .collapse-content.show {
  background-color: var(--dark-card-bg);
  color: var(--dark-text-color);
  border: 1px solid var(--dark-border-color);
}

/* Tab panels: match dark card background and borders when active */
body.dark .tab-content,
body.dark .tab-content.active {
  background: var(--dark-card-bg) !important;
  color: var(--dark-text-color) !important;
  border-color: var(--dark-border-color) !important;
}

/* Buttons that are 'light' with primary text+border should invert on dark
   so they remain visible: dark background, light text and dark border */
body.dark .btn.btn-light.text-primary.border-primary,
body.dark .btn.btn-light.text-primary.border-primary:focus,
body.dark .btn.btn-light.text-primary.border-primary:hover {
  background-color: var(--dark-card-bg) !important;
  color: var(--white-color) !important;
  border-color: var(--dark-border-color) !important;
}


/* ======= SIDEBAR ======= */
.sidebar {
  width: 220px;
  background: var(--card-bg);
  border-right: 1px solid var(--border-color);
  padding: 1rem;
  position: fixed;
  height: 100vh;
  overflow-y: auto;
  transition: background 0.3s, border-color 0.3s, color 0.3s;
}

body.dark .sidebar {
  background: var(--dark-card-bg);
  border-color: var(--dark-border-color);
}

.sidebar nav {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.sidebar a {
  text-decoration: none;
  color: var(--text-color);
  padding: 0.5rem 0.8rem;
  border-radius: var(--border-radius);
  transition: all 0.2s ease;
  font-size: 0.95rem;
}

body.dark .sidebar a {
  color: var(--dark-text-color);
}

.sidebar a:hover {
  background: var(--primary-color);
  color: var(--white-color);
}

/* ======= HEADER ======= */
header {
  background-color: var(--primary-color);
  color: var(--white-color);
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 1.25rem;
  position: fixed;
  width: 100%;
  left: 0;
  top: 0;
  z-index: 12;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
  transition: background 0.3s;
}

header h1 { font-size: 1.3rem; font-weight: 500; }

.controls { display: flex; gap: 1rem; align-items: center; }

.color-pickers { display: flex; gap: 1rem; }

.color-pickers .picker {
  display: flex; align-items: center; gap: 0.5rem;
  font-size: 0.9rem;
}

.color-pickers input[type="color"] {
  width: 32px; height: 32px; border: none; cursor: pointer;
}

.dark-mode-switch {
  display: flex; align-items: center; gap: 0.4rem; font-size: 0.9rem;
}

/* ======= MAIN ======= */
main {
  margin-left: 0;
  margin-top: 80px;
  padding: 1.5rem;
  width: 100%;
  max-width: none;
  transition: background 0.3s, color 0.3s;
  overflow: visible !important;
}

/* Make the main container full-width now that sidebar is removed */
main > .container {
  max-width: none !important;
  width: 100% !important;
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}

body.dark main { color: var(--dark-text-color); }

/* ======= SECTION ======= */
section {
  /* Use canonical palette from :root. Section no longer defines its own
     --h-* variables so runtime updates to --h-primary / --h-secondary
     (from JS) affect all sections consistently. */
  overflow: visible !important;
}

/* ======= HEADINGS ======= */
section h2 {
  border-left: 4px solid var(--primary-color);
  padding-left: 0.6rem;
  margin-bottom: 1rem;
  color: var(--primary-color);
  font-size: 1.15rem;
  font-weight: 600;
}

body.dark section h2 { color: var(--primary-color); }

/* ======= BUTTONS ======= */
.btn {
  border: none; 
  color: var(--white-color); 
  padding: 14px 28px; 
  cursor: pointer; 
  border-radius: 5px; 
  transition: background-color 0.3s ease;
}

.primary {background-color: var(--primary-color); color: var(--white-color);} 
.primary:hover {background: color-mix(in srgb, var(--primary-color) 85%, black 10%); color: var(--white-color);} 

.secondary {background-color: var(--secondary-color); color: var(--white-color);} 
.secondary:hover {background: var(--light-gray); color: var(--white-color);} 

.success {background-color: var(--success-color); color: var(--white-color);} 
.success:hover {background: color-mix(in srgb, var(--success-color) 85%, black 10%); color: var(--white-color);} 

.warning {background-color: hsl(33 100% 50%); color: var(--white-color);} 
.warning:hover {background: hsl(34 100% 44%); color: var(--white-color);} 

.danger {background-color: var(--danger-color); color: var(--white-color);} 
.danger:hover {background: color-mix(in srgb, var(--danger-color) 80%, black 12%); color: var(--white-color);}

/* ======= DARK MODE BUTTONS ======= */
body.dark .primary {
  background-color: var(--btn-primary-bg);
  color: var(--white-color);
}
body.dark .primary:hover {
  background-color: var(--btn-primary-hover);
}

body.dark .secondary {
  background-color: var(--btn-secondary-bg);
  color: var(--white-color);
}
body.dark .secondary:hover {
  background-color: var(--btn-secondary-hover);
}

body.dark .success {
  background-color: var(--btn-success-bg);
  color: var(--white-color);
}
body.dark .success:hover {
  background-color: var(--btn-success-hover);
}

body.dark .warning {
  background-color: var(--btn-warning-bg);
  color: var(--white-color);
}
body.dark .warning:hover {
  background-color: var(--btn-warning-hover);
}

body.dark .danger {
  background-color: var(--btn-danger-bg);
  color: var(--white-color);
}
body.dark .danger:hover {
  background-color: var(--btn-danger-hover);
} 

/* ======= CRUD TOOLBAR ======= */
.crud-toolbar {
  display: flex;
  gap: 0.5rem;
  align-items: center;
  flex-wrap: wrap;
}

.crud-btn {
  display: inline-flex;
  align-items: center;
  gap: .5rem;
  padding: 0.5rem 0.9rem;
  border-radius: 8px;
  font-weight: 600;
  color: var(--white-color);
  border: 1px solid transparent;
  box-shadow: 0 2px 6px rgba(0,0,0,0.06);
}

.crud-btn .material-icons { font-size: 1.05rem; }

.crud-btn.create { background: var(--primary-color); border-color: color-mix(in srgb, var(--primary-color) 60%, black 10%); }
.crud-btn.read { background: hsl(210 8% 45%); border-color: color-mix(in srgb, hsl(210 8% 45%) 60%, black 10%); }
.crud-btn.update { background: var(--secondary-color); border-color: color-mix(in srgb, var(--secondary-color) 60%, black 10%); }
.crud-btn.delete { background: var(--danger-color, hsl(1 70% 52%)); border-color: color-mix(in srgb, var(--danger-color, hsl(1 70% 52%)) 60%, black 10%); }

/* Dark mode CRUD buttons */
body.dark .crud-btn.create { 
  background: var(--btn-primary-bg); 
  border-color: var(--btn-primary-bg);
  color: var(--white-color);
}
body.dark .crud-btn.read { 
  background: hsl(0, 0%, 35%); 
  border-color: hsl(0, 0%, 35%);
  color: var(--white-color);
}
body.dark .crud-btn.update { 
  background: var(--btn-secondary-bg); 
  border-color: var(--btn-secondary-bg);
  color: var(--white-color);
}
body.dark .crud-btn.delete { 
  background: var(--btn-danger-bg); 
  border-color: var(--btn-danger-bg);
  color: var(--white-color);
}

.crud-btn:hover { transform: translateY(-2px); }
.crud-btn:active { transform: translateY(0); }
.crud-btn:focus { outline: none; box-shadow: 0 0 0 4px color-mix(in srgb, var(--primary-color) 12%, transparent); }

/* Small/compact variant */
.crud-toolbar .crud-btn.small { padding: 0.35rem 0.6rem; font-size: 0.9rem; }

@media (max-width: 600px) {
  .crud-toolbar { gap: 0.4rem; }
  .crud-btn .label { display:none; } /* keep icons only on very small screens */
}

/* ======= FORMULARIOS ======= */
.form-group { margin: 0.8rem 0; }
label { display:flex; align-items:center; gap:0.4rem; cursor:pointer; font-size:0.95rem; }
input[type="checkbox"], input[type="radio"] { accent-color: var(--primary-color); width:18px; height:18px; }
input[type="text"], select { padding:0.6rem; border-radius:var(--border-radius); border:1px solid var(--border-color); width:100%; max-width:300px; font-size:0.95rem; transition:border-color 0.3s; }

input[type="text"]:focus, select:focus { outline:none; border-color: var(--primary-color); }

/* ======= FORMULARIOS MODERNOS ======= */
.modern-form {
  max-width: 100%;
}

.modern-form .form-label {
  font-weight: 600;
  color: var(--text-color);
  margin-bottom: 0.5rem;
  display: flex;
  align-items: center;
  gap: 0.5rem;
}

.modern-form .form-label .material-icons {
  font-size: 1.1rem;
  color: var(--primary-color);
}

.modern-input,
.modern-select,
.modern-textarea {
  border: 2px solid var(--border-color);
  border-radius: 8px;
  padding: 0.75rem 1rem;
  font-size: 1rem;
  transition: all 0.3s ease;
  background-color: var(--card-bg);
  color: var(--text-color);
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
}

.modern-input:focus,
.modern-select:focus,
.modern-textarea:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary-color) 20%, transparent);
  background-color: var(--card-bg);
}

.modern-input::placeholder,
.modern-textarea::placeholder {
  color: color-mix(in srgb, var(--text-color) 60%, transparent);
}

.modern-textarea {
  resize: vertical;
  min-height: 100px;
}

/* Estados de validación */
.modern-input.is-valid,
.modern-select.is-valid,
.modern-textarea.is-valid {
  border-color: var(--success-color);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--success-color) 20%, transparent);
}

.modern-input.is-invalid,
.modern-select.is-invalid,
.modern-textarea.is-invalid {
  border-color: var(--danger-color);
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--danger-color) 20%, transparent);
}

/* Checkboxes y radios modernos */
.modern-form .form-check-input {
  width: 1.2rem;
  height: 1.2rem;
  margin-top: 0.1rem;
  accent-color: var(--primary-color);
  border: 2px solid var(--border-color);
  border-radius: 4px;
  transition: all 0.3s ease;
}

.modern-form .form-check-input:checked {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}

.modern-form .form-check-input:focus {
  box-shadow: 0 0 0 3px color-mix(in srgb, var(--primary-color) 20%, transparent);
}

.modern-form .form-check-label {
  font-weight: 500;
  color: var(--text-color);
  cursor: pointer;
  margin-left: 0.5rem;
}

/* Input groups */
.modern-form .input-group .btn {
  border: 2px solid var(--border-color);
  border-left: none;
  background-color: var(--card-bg);
  color: var(--text-color);
  transition: all 0.3s ease;
}

.modern-form .input-group .btn:hover {
  background-color: var(--primary-color);
  color: var(--white-color);
  border-color: var(--primary-color);
}

.modern-form .input-group .modern-input {
  border-right: none;
}

.modern-form .input-group .modern-input:focus {
  border-right: none;
}

/* Form text */
.modern-form .form-text {
  font-size: 0.875rem;
  color: color-mix(in srgb, var(--text-color) 70%, transparent);
  margin-top: 0.25rem;
}

/* Card headers para formularios */
.modern-form .card-header {
  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
  color: var(--white-color);
  border: none;
  border-radius: 8px 8px 0 0;
}

.modern-form .card-header h3 {
  color: var(--white-color);
  font-weight: 600;
}

.modern-form .card-header .material-icons {
  color: var(--white-color);
}

/* Dark mode específico para formularios */
body.dark .modern-input,
body.dark .modern-select,
body.dark .modern-textarea {
  background-color: var(--dark-card-bg);
  color: var(--dark-text-color);
  border-color: var(--dark-border-color);
}

body.dark .modern-input:focus,
body.dark .modern-select:focus,
body.dark .modern-textarea:focus {
  background-color: var(--dark-card-bg);
  border-color: var(--primary-color);
}

body.dark .modern-form .form-label {
  color: var(--dark-text-color);
}

body.dark .modern-form .form-check-label {
  color: var(--dark-text-color);
}

body.dark .modern-form .form-text {
  color: color-mix(in srgb, var(--dark-text-color) 70%, transparent);
}

body.dark .modern-form .input-group .btn {
  background-color: var(--dark-card-bg);
  color: var(--dark-text-color);
  border-color: var(--dark-border-color);
}

/* ======= ALERTS ======= */
.alert { padding:0.8rem 1rem; border-radius:var(--border-radius); margin:0.5rem 0; font-size:0.95rem; }
.alert-info { background: hsl(203 90% 94%); color: hsl(200 92% 20%); border-left:4px solid var(--primary-color); }
.alert-success { background: hsl(166 57% 94%); color: hsl(163 85% 21%); border-left:4px solid var(--secondary-color); }
.alert-warning { background: hsl(39 100% 95%); color: hsl(42 95% 20%); border-left:4px solid hsl(45 100% 50%); }

/* ======= CARDS ======= */
.card {
  border: 1px solid var(--border-color);
  border-radius: 10px;
  padding: 1rem;
  max-width: 300px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.05);
  background: var(--card-bg);
  color: var(--text-color); /* <-- agregar */
  transition: background 0.3s, color 0.3s, border-color 0.3s;
}
body.dark .card {
  background: var(--dark-card-bg);
  border-color: var(--dark-border-color);
  color: var(--dark-text-color); /* <-- agregar */
}
.card h3 {
  color: var(--primary-color);
  margin-top: 0;
}
body.dark .card h3 {
  color: var(--primary-color); /* mantener contraste en modo oscuro */
}
.card p {
  font-size: 0.9rem;
  color: inherit; /* toma el color de la card */
}
.card-buttons {
  margin-top: 0.8rem;
  display: flex;
  gap: 0.5rem;
}


/* ======= NAVBAR ======= */
.navbar { display:flex; background:var(--primary-color); border-radius:var(--border-radius); }
.navbar a { color:var(--white-color); padding:0.8rem 1.2rem; text-decoration:none; font-weight:500; transition: background 0.3s; }
/*.navbar a:hover { background: var(--secondary-color); }*/

/* ======= SWITCH ======= */
.switch { position:relative; display:inline-block; width:50px; height:26px; }
.switch input { opacity:0; width:0; height:0; }
.slider { position:absolute; cursor:pointer; background-color: var(--muted-color); border-radius:26px; top:0; left:0; right:0; bottom:0; transition:0.3s; }
.slider:before { position:absolute; content:""; height:20px; width:20px; left:3px; bottom:3px; background:var(--white-color); border-radius:50%; transition:0.3s; }
input:checked + .slider { background-color: var(--primary-color); }
input:checked + .slider:before { transform: translateX(24px); }

/* ======= PESTAÑAS (estilo tipo pestaña de navegador) ======= */
.tabs {
  display: flex;
  gap: 0.35rem;
  margin-bottom: 0; /* los contenidos contendrán el borde */
  align-items: flex-end; /* alinear las pestañas con la parte superior del contenido */
}

/* Usar el color primario para las líneas/bordes de las pestañas */
.tab-btn {
  background: transparent;
  border: 1px solid var(--primary-color);
  border-bottom: 1px solid transparent; /* para que la pestaña se fusione con el contenido cuando está activa */
  padding: 0.6rem 1rem;
  border-top-left-radius: 10px;
  border-top-right-radius: 10px;
  border-bottom-left-radius: 0;
  border-bottom-right-radius: 0;
  cursor: pointer;
  transition: background 0.2s, color 0.2s, transform 0.08s;
  color: var(--primary-color);
  position: relative;
  top: 1px; /* eleva ligeramente para simular pestaña */
}

.tab-btn:not(.active):hover {
  background: color-mix(in srgb, var(--card-bg) 85%, var(--primary-color) 5%);
}

.tab-btn.active {
  background: var(--card-bg);
  color: var(--primary-color);
  border-color: var(--primary-color);
  border-bottom: 1px solid var(--card-bg); /* oculta la separación con el contenido */
  box-shadow: 0 -2px 8px rgba(0,0,0,0.04);
  z-index: 5;
}

/* Hover / focus / indicador para la pestaña en la que está el cursor (o la activa) */
.tab-btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 20px rgba(0,0,0,0.06);
}

.tab-btn:focus {
  outline: none;
  box-shadow: 0 0 0 4px color-mix(in srgb, var(--primary-color) 12%, transparent);
}

.tab-btn.active::after {
  content: "";
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  bottom: -10px; /* justo sobre el panel */
  width: 44px;
  height: 6px;
  background: var(--primary-color);
  border-radius: 6px;
  opacity: 0.12;
  transition: opacity 0.18s ease, transform 0.18s ease;
  pointer-events: none;
}

.tab-btn.active:hover::after {
  opacity: 0.2;
  transform: translateX(-50%) translateY(-2px);
}

.tab-content {
  display: none;
  border: 1px solid var(--primary-color);
  border-top: none; /* el borde superior lo forman las pestañas */
  padding: 1rem;
  border-bottom-left-radius: 10px;
  border-bottom-right-radius: 10px;
  background: var(--card-bg);
}

.tab-content.active { display: block; }

/* ======= PROGRESS ======= */
.progress { width:100%; background:var(--muted-color); border-radius:10px; overflow:hidden; }
.progress-bar { background:var(--primary-color); color:var(--white-color); padding:0.3rem; text-align:center; transition: width 0.3s ease; }

/* ======= BOTÓN DE PROGRESO (solo HTML + CSS) ======= */

.progress-toggle-input { display: none; }

/* Ensure the completed label is hidden by default so 'Completado' doesn't appear
  together with the idle label on wider screens. We control visibility with
  opacity so the element stays in the flow for absolute centering. */
.label-complete { opacity: 0; }

.progress-toggle {
  display: inline-flex; /* align content vertically and keep predictable height */
  align-items: center;
  justify-content: center;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  border-radius: 10px;
  padding: 0.6rem 1rem;
  min-height: 40px; /* ensure button is visible and not too thin */
  background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, var(--white-color) 88%), var(--primary-color));
  color: var(--white-color);
  font-weight: 600;
  border: 1px solid color-mix(in srgb, var(--primary-color) 60%, black 10%);
  width:500px
}

.progress-toggle .progress-fill {
  position: absolute;
  left: 0; top: 0; bottom: 0;
  width: 0%;
  height: 100%; /* ensure the fill covers the full button height */
  background: linear-gradient(90deg, var(--primary-color), color-mix(in srgb, var(--primary-color) 70%, black 30%));
  z-index: 1;
  transition: width var(--progress-duration) linear;
}

.progress-toggle .label-content {
  position: relative;
  z-index: 2;
  display: block;
  width: 100%;
  min-height: 1.2em; /* reserve vertical space */
}

/* Stack the three label states on top of each other and center text both
   horizontally and vertically so 'Completado' always appears centered. */
.progress-toggle .label-content > span {
  position: absolute;
  left: 0;
  right: 0;
  display: block;
  width: 100%;
  text-align: center;
  top: 50%;
  transform: translateY(-50%);
  pointer-events: none;
}

/* Texto: inactivo / cargando / completado (desktop) - use opacity to show/hide */
.label-idle { opacity: 1; }
.label-loading { opacity: 0; }
.label-complete { opacity: 0; }

/* When checked: hide idle, show loading (then animations handle transitions to complete) */
.progress-toggle-input:checked + .progress-toggle .label-idle { opacity: 0; }
.progress-toggle-input:checked + .progress-toggle .label-loading { opacity: 1; }

/* Use keyframe animations (defined below) to keep the desktop behaviour in sync
   with the mobile animations. The .progress-fill uses animation so it stays at
   100% after finishing. */
.progress-toggle .progress-fill {
  position: absolute;
  left: 0; top: 0; bottom: 0;
  width: 0%;
  background: linear-gradient(90deg, var(--primary-color), color-mix(in srgb, var(--primary-color) 70%, black 30%));
  z-index: 1;
}

.progress-toggle-input:checked + .progress-toggle .progress-fill {
  animation: fillBar var(--progress-duration) linear forwards;
}

.progress-toggle-input:checked + .progress-toggle .label-loading {
  animation: hideLoading var(--progress-duration) forwards;
}

.progress-toggle-input:checked + .progress-toggle .label-complete {
  /* don't change display; we manage visibility with opacity/animation */
  animation: showComplete var(--progress-duration) forwards;
}

.progress-toggle-input:checked + .progress-toggle {
  animation: markBgComplete var(--progress-duration) forwards;
}

/* Keyframes para sincronizar la animación del botón en pantallas grandes */
@keyframes fillBar { from { width: 0%; } to { width: 100%; } }
@keyframes hideLoading { 0% { opacity: 1; } 99% { opacity: 1; } 100% { opacity: 0; } }
@keyframes showComplete { 0% { opacity: 0; } 99% { opacity: 0; } 100% { opacity: 1; } }
@keyframes markBgComplete { 0% { background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, white 88%), var(--primary-color)); border-color: color-mix(in srgb, var(--primary-color) 60%, black 10%); } 99% { background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, white 88%), var(--primary-color)); border-color: color-mix(in srgb, var(--primary-color) 60%, black 10%); } 100% { background: var(--success-color); border-color: var(--success-color); } }

/* Pequeños ajustes responsivos */
  @media (max-width: 600px) {
  .progress-toggle { padding: 0.45rem 0.8rem; font-size: 0.95rem; }

  .progress-toggle-input { display: none; }

  .progress-toggle {
    display: inline-block;
    position: relative;
    overflow: hidden;
    cursor: pointer;
    border-radius: 10px;
    padding: 0.5rem 1rem;
  background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, var(--white-color) 88%), var(--primary-color));
  color: var(--white-color);
    font-weight: 600;
    border: 1px solid color-mix(in srgb, var(--primary-color) 60%, black 10%);
  }

  .progress-toggle .progress-fill {
    position: absolute;
    left: 0; top: 0; bottom: 0;
    width: 0%;
    background: linear-gradient(90deg, var(--primary-color), color-mix(in srgb, var(--primary-color) 70%, black 30%));
    z-index: 1;
  }

  .progress-toggle .label-content { position: relative; z-index: 2; display:block; width:100%; min-height:1.2em; }

  .progress-toggle .label-content > span { position:absolute; left:0; right:0; display:block; width:100%; text-align:center; top:50%; transform:translateY(-50%); pointer-events:none; }

  .label-idle { opacity: 1; }
  .label-loading { opacity: 0; }
  .label-complete { opacity: 0; }
  .progress-toggle-input:checked + .progress-toggle .label-idle { opacity: 0; }
  .progress-toggle-input:checked + .progress-toggle .label-loading { opacity: 1; }

  /* Animaciones sincronizadas cuando está checked */
  @keyframes fillBar { from { width: 0%; } to { width: 100%; } }
  @keyframes hideLoading { 0% { opacity: 1; } 99% { opacity: 1; } 100% { opacity: 0; } }
  @keyframes showComplete { 0% { opacity: 0; } 99% { opacity: 0; } 100% { opacity: 1; } }
  @keyframes markBgComplete { 0% { background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, white 88%), var(--primary-color)); border-color: color-mix(in srgb, var(--primary-color) 60%, black 10%); } 99% { background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 12%, white 88%), var(--primary-color)); border-color: color-mix(in srgb, var(--primary-color) 60%, black 10%); } 100% { background: var(--success-color); border-color: var(--success-color); } }

  .progress-toggle-input:checked + .progress-toggle .progress-fill {
    animation: fillBar var(--progress-duration) linear forwards;
  }

  .progress-toggle-input:checked + .progress-toggle .label-loading {
    animation: hideLoading var(--progress-duration) forwards;
  }

  .progress-toggle-input:checked + .progress-toggle .label-complete {
    /* visibility handled via opacity + animation */
    animation: showComplete var(--progress-duration) forwards;
  }

  /* Cambiar el fondo del botón al finalizar (efecto instantáneo al 100% via animation) */
  .progress-toggle-input:checked + .progress-toggle {
    animation: markBgComplete var(--progress-duration) forwards;
  }

  /* Pequeños ajustes responsivos */
  @media (max-width: 600px) {
    .progress-toggle { padding: 0.45rem 0.8rem; font-size: 0.95rem; }
  }
}

/* ======= MODAL ======= */
.modal { display:none; position:fixed; z-index:100; left:0; top:0; width:100%; height:100%; background:rgba(0,0,0,0.4); }
.modal.show { display:block; }
.modal-content { background: var(--card-bg); margin:10% auto; padding:1.5rem; border-radius:10px; width:90%; max-width:400px; position:relative; box-shadow:0 5px 15px rgba(0,0,0,0.3); transition: background 0.3s, color 0.3s; }
.close { position:absolute; top:8px; right:12px; font-size:1.3rem; cursor:pointer; color: hsl(0 0% 60%); transition:color 0.2s; }
.close:hover { color: var(--primary-color); }

/* ======= TOOLTIP ======= */
.tooltip { position:relative; }
.tooltip::after { content: attr(data-tooltip); position:absolute; bottom:130%; left:50%; transform:translateX(-50%); background: var(--text-color); color: var(--white-color); padding:4px 8px; border-radius:4px; font-size:0.8rem; opacity:0; pointer-events:none; transition: opacity 0.2s; white-space:nowrap; }
.tooltip:hover::after { opacity:1; }

/* ======= BADGES ======= */
.badge { display:inline-block; padding:0.3rem 0.8rem; border-radius:999px; font-size:0.85rem; font-weight:500; margin:0.3rem; }
.badge.primary { background: var(--primary-color); color: var(--white-color); }
.badge.secondary { background: var(--secondary-color); color: var(--white-color); }
.badge.outline { border:1px solid var(--primary-color); color: var(--primary-color); background:transparent; }

/* ======= NOTIFICATION BADGES PARA BOTONES ======= */
/* La clase .notification-btn convierte un botón en contenedor relativo
   y .notif-badge posiciona la insignia en la esquina superior izquierda */
.notification-btn { position: relative; overflow: visible; }

.notif-badge {
  position: absolute;
  top: -8px;
  left: -8px;
  min-width: 18px;
  height: 18px;
  padding: 0 6px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 4px;
  font-size: 0.72rem;
  font-weight: 700;
  color: var(--white-color);
  background: var(--primary-color);
  border-radius: 999px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.12);
  line-height: 1;
  border: 2px solid var(--card-bg); /* separa la badge del botón */
}

/* Variante para dot pequeño (sin número) */
.notif-dot {
  width: 10px;
  height: 10px;
  padding: 0;
  min-width: 0;
  border-radius: 50%;
  background: var(--secondary-color);
  display: inline-block;
  box-shadow: 0 2px 6px rgba(0,0,0,0.12);
  border: 2px solid var(--card-bg);
}

/* Si quieres badges en la esquina superior derecha, usar .notif-badge--tr */
.notif-badge--tr { left: auto; right: -8px; top: -8px; }

/* Ajustes responsivos: reducir tamaño en pantallas pequeñas */
@media (max-width: 600px) {
  .notif-badge { top: -6px; left: -6px; min-width:16px; height:16px; font-size:0.66rem; padding:0 5px; }
  .notif-dot { width:8px; height:8px; }
}

/* ======= BOTONES ======= */
section#buttons {
  padding: 2rem 1rem;
}

section#buttons h2 {
  color: var(--primary-color);
}

.button-group {
  margin: 1.5rem 0;
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 1rem;
}

.button-group h3 {
  width: 100%;
  font-size: 1.1rem;
  color: var(--secondary-color);
  margin-bottom: 0.5rem;
}

/* MudBlazor style base */
.mud-button {
  font-family: "Roboto", sans-serif;
  font-weight: 500;
  border-radius: 8px;
  padding: 0.5rem 1rem;
  cursor: pointer;
  border: 1px solid transparent;
  transition: all 0.25s ease;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: 0.4rem;
}

.mud-button i.material-icons {
  font-size: 1.1rem;
}

/* Variantes */
.mud-button.filled {
  background-color: var(--primary-color);
  color: var(--white-color);
  box-shadow: 0 2px 5px rgba(0,0,0,0.15);
}
.mud-button.filled.secondary {
  background-color: var(--secondary-color);
}
.mud-button.filled:hover:not(:disabled) {
  transform: translateY(-1px);
  box-shadow: 0 3px 8px rgba(0,0,0,0.2);
}

/* Outlined */
.mud-button.outlined {
  background: transparent;
  border: 1.5px solid var(--primary-color);
  color: var(--primary-color);
}
.mud-button.outlined.secondary {
  border-color: var(--secondary-color);
  color: var(--secondary-color);
}
.mud-button.outlined:hover:not(:disabled) {
  background-color: var(--primary-color);
  color: var(--white-color);
}

/* Text */
.mud-button.text {
  background: transparent;
  color: var(--primary-color);
  border: none;
}
.mud-button.text.secondary {
  color: var(--secondary-color);
}
.mud-button.text:hover:not(:disabled) {
  background-color: rgba(0,0,0,0.05);
}

/* Icon */
.mud-button.icon {
  padding: 0.5rem;
  border-radius: 50%;
}

/* Disabled */
.mud-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Sizes */
.mud-button.small {
  padding: 0.25rem 0.75rem;
  font-size: 0.8rem;
}
.mud-button.large {
  padding: 0.75rem 1.5rem;
  font-size: 1.05rem;
}

/* Dark mode MudBlazor buttons */
body.dark .mud-button.filled {
  background-color: var(--btn-primary-bg);
  color: var(--white-color);
}
body.dark .mud-button.filled.secondary {
  background-color: var(--btn-secondary-bg);
  color: var(--white-color);
}
body.dark .mud-button.filled:hover:not(:disabled) {
  background-color: var(--btn-primary-hover);
}

body.dark .mud-button.outlined {
  border-color: var(--btn-primary-bg);
  color: var(--btn-primary-bg);
}
body.dark .mud-button.outlined.secondary {
  border-color: var(--btn-secondary-bg);
  color: var(--btn-secondary-bg);
}
body.dark .mud-button.outlined:hover:not(:disabled) {
  background-color: var(--btn-primary-bg);
  color: var(--white-color);
}

body.dark .mud-button.text {
  color: var(--btn-primary-bg);
}
body.dark .mud-button.text.secondary {
  color: var(--btn-secondary-bg);
}
body.dark .mud-button.text:hover:not(:disabled) {
  background-color: rgba(255,255,255,0.1);
}

/* ======= ASEGURAR CONTRASTE EN MODO OSCURO ======= */
/* Forzar color de texto blanco en todos los botones de modo oscuro */
body.dark .btn,
body.dark .crud-btn,
body.dark .mud-button {
  color: var(--white-color) !important;
}

/* Excepción para botones outline que deben mantener el color del borde */
body.dark .btn-outline-primary,
body.dark .btn-outline-secondary,
body.dark .mud-button.outlined,
body.dark .mud-button.text {
  color: inherit !important;
}

/* Asegurar que los botones outline tengan contraste cuando están hover */
body.dark .btn-outline-primary:hover,
body.dark .btn-outline-secondary:hover,
body.dark .mud-button.outlined:hover:not(:disabled) {
  color: var(--white-color) !important;
}

/* Asegurar contraste en botones con gradientes y efectos especiales */
body.dark .btn-gradient,
body.dark .progress-toggle,
body.dark .modern-navbar .btn-gradient {
  color: var(--white-color) !important;
}

/* Asegurar contraste en botones de la navbar */
body.dark .modern-navbar .btn-gradient:hover {
  color: var(--white-color) !important;
}

/* ======= DEMOSTRACIÓN DE INVERSIÓN HSL ======= */
/* Botones de demostración que muestran la inversión de colores */
.demo-button {
  padding: 12px 24px;
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.3s ease;
  margin: 8px;
  display: inline-block;
}

.demo-button.original {
  background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
  color: var(--white-color);
  box-shadow: 0 4px 15px rgba(0,0,0,0.2);
}

.demo-button.inverted {
  background: linear-gradient(135deg, var(--btn-primary-bg), var(--btn-secondary-bg));
  color: var(--white-color);
  box-shadow: 0 4px 15px rgba(0,0,0,0.4);
}

/* En modo claro, mostrar el botón original */
body:not(.dark) .demo-button.inverted {
  display: none;
}

/* En modo oscuro, mostrar el botón invertido */
body.dark .demo-button.original {
  display: none;
}

/* Efectos hover para ambos */
.demo-button.original:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0,0,0,0.3);
}

.demo-button.inverted:hover {
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(0,0,0,0.5);
}

/* Small palette notes removed here; consolidated at end of file */

/* Bootstrap button overrides con colores dinámicos */
.btn-primary {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}
.btn-primary:hover {
  background-color: hsl(211 68% 43%);
  border-color: hsl(211 68% 43%);
}

.btn-secondary {
  background-color: var(--secondary-color);
  border-color: var(--secondary-color);
  color: var(--white-color);
}
.btn-secondary:hover {
  background-color: hsl(186 72% 43%);
  border-color: hsl(186 72% 43%);
}

.btn-outline-primary {
  color: var(--primary-color);
  border-color: var(--primary-color);
}
.btn-outline-primary:hover {
  background-color: var(--primary-color);
  color: var(--white-color);
}

.btn-outline-secondary {
  color: var(--secondary-color);
  border-color: var(--secondary-color);
}
.btn-outline-secondary:hover {
  background-color: var(--secondary-color);
  color: var(--white-color);
}

/* Dark mode Bootstrap buttons */
body.dark .btn-primary {
  background-color: var(--btn-primary-bg);
  border-color: var(--btn-primary-bg);
  color: var(--white-color);
}
body.dark .btn-primary:hover {
  background-color: var(--btn-primary-hover);
  border-color: var(--btn-primary-hover);
}

body.dark .btn-secondary {
  background-color: var(--btn-secondary-bg);
  border-color: var(--btn-secondary-bg);
  color: var(--white-color);
}
body.dark .btn-secondary:hover {
  background-color: var(--btn-secondary-hover);
  border-color: var(--btn-secondary-hover);
}

body.dark .btn-outline-primary {
  color: var(--btn-primary-bg);
  border-color: var(--btn-primary-bg);
}
body.dark .btn-outline-primary:hover {
  background-color: var(--btn-primary-bg);
  color: var(--white-color);
}

body.dark .btn-outline-secondary {
  color: var(--btn-secondary-bg);
  border-color: var(--btn-secondary-bg);
}
body.dark .btn-outline-secondary:hover {
  background-color: var(--btn-secondary-bg);
  color: var(--white-color);
}

/* Transición suave */
#buttonContainer {
  transition: all 0.4s ease;
}


/* Duplicate :root removed; consolidated at end of file */

/* Botones dinámicos */
.btn-primary {
  background-color: var(--primary-color);
  border-color: var(--primary-color);
}
.btn-primary:hover {
  background-color: hsl(211 68% 43%);
  border-color: hsl(211 68% 43%);
}

.btn-secondary {
  background-color: var(--secondary-color);
  border-color: var(--secondary-color);
  color: var(--white-color);
}
.btn-secondary:hover {
  background-color: hsl(186 72% 43%);
  border-color: hsl(186 72% 43%);
}

/* Outline */
.btn-outline-primary {
  color: var(--primary-color);
  border-color: var(--primary-color);
}
.btn-outline-primary:hover {
  background-color: var(--primary-color);
  color: var(--white-color);
}

/* Dropdown custom */
.dropdown-menu {
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);
  border: none;
}
.dropdown-item:hover {
  background-color: var(--primary-color);
  color: var(--white-color);
}

/* Carousel color variables consolidated in final :root */

.text-aqua {
  color: var(--secondary-color);
}

.carousel {
  border: 3px solid var(--secondary-color);
  border-radius: 1.5rem;
}

.carousel-caption h5 {
  font-weight: 700;
}

.carousel-control-prev-icon,
.carousel-control-next-icon {
  filter: invert(100%) hue-rotate(180deg);
}

.carousel-indicators [data-bs-target] {
  background-color: var(--secondary-color);
}

/*Estilo Arrows carousel*/
.carousel-control-prev,
.carousel-control-next {
  transition: opacity 0.3s ease;
}

.carousel-control-prev[style*="display: none"],
.carousel-control-next[style*="display: none"] {
  opacity: 0;
  pointer-events: none;
}

/*CHAT*/
.chat-container {
  display: flex;
  flex-direction: column;
  gap: 10px;
  max-width: 600px;
  margin: 0 auto;
}

.chat-bubble {
  padding: 12px 18px;
  border-radius: 20px;
  max-width: 75%;
  font-size: 1rem;
  line-height: 1.4;
  position: relative;
  word-wrap: break-word;
  animation: fadeIn 0.3s ease;
}

/* Chat a la izquierda */
  .chat-bubble.start {
  background-color: var(--secondary-color, hsl(187 69% 52%));
  color: var(--white-color);
  align-self: flex-start;
  border-bottom-left-radius: 0;
}

/* Chat a la derecha */
.chat-bubble.end {
  background-color: var(--primary-color, hsl(210 74% 52%));
  color: var(--white-color);
  align-self: flex-end;
  border-bottom-right-radius: 0;
}

/* Animación suave */
@keyframes fadeIn {
  from { opacity: 0; transform: translateY(10px); }
  to { opacity: 1; transform: translateY(0); }
}

/*CALENDARIO*/
   .calendar { display: grid; grid-template-columns: repeat(7, 1fr); gap: 5px; }
  .day-card { min-height: 120px; border: 1px solid var(--border-color); padding: 5px; border-radius: 5px; position: relative; background-color: var(--secondary-color, hsl(187 69% 52%)); }
    .day-number { font-weight: bold; }
  .event { background-color: var(--primary-color, hsl(219 100% 54%)); color: var(--white-color); padding: 2px 6px; border-radius: 4px; margin: 2px 0; font-size: 0.85rem; cursor: pointer; overflow: hidden; text-overflow: ellipsis; white-space: nowrap; }
  .event:hover::after {
        content: attr(data-desc);
        position: absolute;
        left: 0;
        top: 100%;
  background: var(--primary-color, hsl(219 100% 54%));
    color: var(--white-color);
        padding: 4px 8px;
        border-radius: 4px;
        white-space: normal;
        width: max-content;
        max-width: 200px;
        z-index: 10;
    }
    .weekdays { display: grid; grid-template-columns: repeat(7, 1fr); text-align: center; font-weight: bold; margin-bottom: 5px; }
    main { padding: 1rem; }


    /*collapse*/
    .collapse-content {
  overflow: hidden;
  max-height: 0;
  transition: max-height 0.4s ease, padding 0.4s ease;
  padding: 0 12px;
  background-color: var(--muted-color);
  border-radius: 8px;
}

/* Estado expandido */
.collapse-content.show {
  max-height: 200px; /* ajustable según el contenido */
  padding: 12px;
}






/* ======= RESPONSIVE ======= */
/* Mobile-first adjustments */
.menu-toggle { display:none; }
.backdrop { display:none; }

@media (max-width: 960px) {
  /* Header: full width and left aligned */
  header {
    width: 100%;
    left: 0;
    padding: 0.75rem 1rem;
    gap: 0.75rem;
  }

  header h1 { font-size: 1rem; }
  .controls { gap: 0.6rem; }
  .color-pickers { gap: 0.6rem; }
  .color-pickers .picker { font-size: 0.85rem; }
  .color-pickers input[type="color"] { width: 28px; height: 28px; }

  /* Hamburger visible */
  .menu-toggle {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border-radius: 8px;
    border: 1px solid rgba(255,255,255,0.35);
    background: transparent;
    color: var(--white-color);
    font-size: 1.1rem;
    cursor: pointer;
  }

  /* Sidebar off-canvas */
  .sidebar {
    transform: translateX(-100%);
    transition: transform var(--transition-speed) ease, background 0.3s, border-color 0.3s, color 0.3s;
    width: 260px;
    left: 0;
    top: 0;
    z-index: 11;
  }
  .sidebar.open { transform: translateX(0); }

  /* Backdrop */
  .backdrop {
    position: fixed;
    inset: 0;
    background: rgba(0,0,0,0.45);
    z-index: 10;
    display: none;
  }
  .backdrop.show { display: block; }

  /* Main area takes full width and no left margin */
  main {
    margin-left: 0;
    width: 100%;
    max-width: 100%;
  }

  /* When sidebar is hidden on mobile, give main some top padding so content isn't hidden under header */
  main { padding-top: 1.25rem; }

  /* Navbar wraps on medium screens */
  .navbar { flex-wrap: wrap; }
  .navbar a { flex: 1 1 auto; min-width: 120px; }
}

@media (max-width: 600px) {
  .btn { width: 100%; max-width: 100%; }
  input[type="text"], select { max-width: 100%; }
  .navbar { flex-direction: column; }
  .navbar a { padding: 0.7rem 1rem; }
  .tabs { flex-wrap: wrap; }
  .modal-content { width: 94%; margin: 25% auto; }
}

/* Estilos para versiones con sidebar (ahora neutralizados ya que usamos offcanvas) */
/* Mantengo las clases por compatibilidad pero no afectan el layout principal */
.sidebar {
  /* sidebar removed — keep minimal safe styles for fallbacks */
  width: 0; /* neutral */
  padding: 0;
  background: transparent;
  border: none;
  height: auto;
  overflow: visible;
}

.agenda-grid {
  display: block; /* neutral: no two-column layout anymore */
  gap: 0;
}

@media (max-width: 900px) {
  .sidebar { width: 200px; }
  .calendar { grid-template-columns: repeat(2, 1fr); }
}

@media (max-width: 640px) {
  .agenda-grid { grid-template-columns: 1fr; }
  .sidebar { width:100%; position:relative; }
}

/* ======= AGENDA / CALENDARIO ======= */
.calendar { display: grid; grid-template-columns: repeat(7, 1fr); gap: 10px; }
.weekdays { display: grid; grid-template-columns: repeat(7, 1fr); text-align: center; font-weight:600; color:var(--primary-color); margin-bottom:8px; }
.day-card { min-height: 110px; border: 1px solid var(--border-color); padding: 8px; border-radius: 10px; position: relative; background: var(--card-bg); transition: transform 0.15s ease, box-shadow 0.15s ease; overflow: hidden; }
.day-card:hover { transform: translateY(-4px); box-shadow: 0 6px 18px rgba(0,0,0,0.06); }
.day-number { font-weight:700; color: var(--text-color); margin-bottom:6px; }
.event { display:block; padding:6px 8px; border-radius:8px; margin-bottom:6px; color: var(--white-color); font-size:0.9rem; cursor:pointer; text-overflow:ellipsis; white-space:nowrap; overflow:hidden; }
.event.small { font-size:0.82rem; padding:4px 6px; border-radius:6px; }
.event.primary { background: var(--primary-color); background: linear-gradient(90deg, var(--primary-color), color-mix(in srgb, var(--primary-color) 70%, black 30%)); }
.event.secondary { background: var(--secondary-color); background: linear-gradient(90deg, var(--secondary-color), color-mix(in srgb, var(--secondary-color) 70%, black 30%)); }
.event.ghost { background: transparent; color: var(--text-color); border:1px dashed var(--border-color); }

/* Evento marcado como terminado */
.event.finished {
  background: linear-gradient(90deg, hsl(1 70% 52%), hsl(10 63% 45%)) !important;
  color: var(--white-color) !important;
  opacity: 0.95;
  box-shadow: none;
}

/* tooltip simple usando atributo data-desc */
.event[data-desc]:hover::after {
  content: attr(data-desc);
  position: absolute;
  left: 8px;
  top: calc(100% + 6px);
  background: var(--primary-color);
  color: var(--white-color);
  padding: 6px 10px;
  border-radius: 8px;
  white-space: normal;
  max-width: 260px;
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
  z-index: 40;
}

/* === CHIP SET === */
.chip-set {
  margin-bottom: 2rem;
}

.chips {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
  justify-content: flex-start;
}

/* Cada chip */
.chip {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border-radius: 16px;
  padding: 6px 14px;
  font-size: 0.9rem;
  cursor: pointer;
  user-select: none;
  border: none;
  background-color: transparent;
  transition: all 0.3s ease;
  position: relative;
  padding-right: 21px; /* espacio para el check */
  white-space: nowrap; /* evita que el texto se corte */
}

/* Colores base */
.primary { color: var(--primary-); }
.secondary { color: var(--secondary-color); }
.info { color: #0288d1; }
.success { color: #2e7d32; }
.warning { color: #ed6c02; }
.error { color: #d32f2f; }
.dark { color: #212121; }

/* Outlined */
.chips.outlined .chip {
  border: 1px solid currentColor;
}

/* Filled */
.chips.filled .chip {
  color: #fff;
}
.chips.filled .primary { background-color: var(--primary-color); }
.chips.filled .secondary { background-color: var(--secondary-color); }
.chips.filled .info { background-color: #0288d1; }
.chips.filled .success { background-color: #2e7d32; }
.chips.filled .warning { background-color: #ed6c02; }
.chips.filled .error { background-color: #d32f2f; }
.chips.filled .dark { background-color: #212121; }
.chips.filled .chip:not([class*=" "]) {
  background-color: #e0e0e0;
  color: #333;
}

/* Estado seleccionado */
.chip:has(input:checked) {
  background-color: rgba(0, 0, 0, 0.08);
}

/* Check mark visible al seleccionar */
.chip:has(input:checked)::after {
  content: "✓";
  position: absolute;
  right: 4px; /* más prolijo en móviles */
  font-weight: bold;
  color: currentColor;
}


/*TODO ESTILO KANBAN*/

.kanban-container {
    padding: 2rem 1rem;
    background: var(--light-bg);
    border-radius: 18px;
    box-shadow: 0 4px 24px 0 rgba(0,0,0,0.07), 0 1.5px 6px 0 rgba(0,0,0,0.04);
    margin-bottom: 2rem;
}


.kanban-toolbar {
    margin-bottom: 1.5rem;
    padding: 0.75rem 1rem;
    background: var(--white-color);
    border-radius: 12px;
    display: flex;
    gap: 1rem;
    align-items: center;
    box-shadow: 0 2px 8px 0 rgba(0,0,0,0.04);
}

body.dark .kanban-toolbar {
    background: var(--dark-bg);
}

.kanban-sections {
    display: flex;
    flex-direction: column;
    gap: 2rem;
}


.kanban-section {
    background: var(--white-color);
    border-radius: 14px;
    padding: 1.5rem 1rem 1rem 1rem;
    box-shadow: 0 2px 12px 0 rgba(0,0,0,0.06);
    border: 1.5px solid var(--border-color);
    transition: box-shadow 0.2s, border 0.2s;
}
.kanban-section:hover {
    box-shadow: 0 6px 24px 0 rgba(0,0,0,0.10);
    border-color: var(--primary-color);
}

body.dark .kanban-section {
    background: var(--dark-bg);
}


.section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.2rem;
    padding-bottom: 0.5rem;
    border-bottom: 2px solid var(--primary-color);
}
.section-header h2 {
    margin: 0;
    color: var(--primary-color);
    font-size: 1.3rem;
    font-weight: 700;
    letter-spacing: 0.5px;
    display: flex;
    align-items: center;
    gap: 0.5em;
}
.section-header h2::before {
    content: '';
    display: inline-block;
    width: 14px;
    height: 14px;
    border-radius: 50%;
    background: var(--primary-color);
    margin-right: 0.5em;
}

.section-header h2 {
    margin: 0;
    color: var(--primary-color);
}


.kanban-columns {
    display: flex;
    gap: 1.5rem;
    overflow-x: auto;
    padding-bottom: 0.5rem;
}


.kanban-column {
    flex: 1;
    min-width: 280px;
    background: var(--light-bg-alt);
    padding: 1rem 0.75rem 1.5rem 0.75rem;
    border-radius: 10px;
    border: 1.5px solid var(--primary-color);
    box-shadow: 0 1px 4px 0 rgba(0,0,0,0.04);
    transition: box-shadow 0.2s, border 0.2s;
}
.kanban-column h3 {
    margin: 0 0 1rem 0;
    font-size: 1.1rem;
    color: var(--secondary-color);
    font-weight: 600;
    letter-spacing: 0.2px;
    text-align: left;
}
.kanban-column:hover {
    box-shadow: 0 4px 16px 0 rgba(0,0,0,0.08);
    border-color: var(--secondary-color);
}

body.dark .kanban-column {
    background: var(--dark-bg-alt);
}

.kanban-column h3 {
    margin: 0 0 1rem 0;
    font-size: 1rem;
    color: var(--text-muted);
}

.kanban-cards {
    min-height: 100px;
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-bottom: 1rem;
}


.kanban-card {
    background: var(--white-color);
    padding: 1.1rem 1rem 0.8rem 1rem;
    border-radius: 10px;
    box-shadow: 0 2px 8px 0 rgba(0,0,0,0.4);
    cursor: move;
    border-left: 5px solid var(--primary-color);
    margin-bottom: 0.5rem;
    transition: box-shadow 0.2s, border 0.2s;
    position: relative;
}
.kanban-card:hover {
    box-shadow: 0 6px 18px 0 rgba(0,0,0,0.13);
    border-left: 5px solid var(--secondary-color);
}
.kanban-card .card-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 0.5rem;
}
.kanban-card h3 {
    margin: 0;
    font-size: 1.05rem;
    color: var(--primary-color);
    font-weight: 600;
}
.kanban-card p {
    margin: 0.5rem 0;
    font-size: 0.97rem;
    color: var(--text-muted);
}
.kanban-card .card-footer {
    font-size: 0.8rem;
    color: var(--secondary-color);
    margin-top: 0.5rem;
    text-align: right;
}
.kanban-card .badge {
    display: inline-block;
    background: var(--secondary-color);
    color: var(--white-color);
    border-radius: 8px;
    font-size: 0.75em;
    padding: 0.2em 0.7em;
    margin-left: 0.5em;
}

body.dark .kanban-card {
    background: var(--dark-bg);
    color: var(--white-color);
}

.kanban-card.dragging {
    opacity: 0.5;
}

.kanban-card .card-header {
    display: flex;
    justify-content: space-between;
    align-items: start;
    margin-bottom: 0.5rem;
}

.kanban-card h3 {
    margin: 0;
    font-size: 1rem;
    color: var(--text-color);
}

.kanban-card p {
    margin: 0.5rem 0;
    font-size: 0.9rem;
    color: var(--text-muted);
}

.kanban-card .card-footer {
    font-size: 0.8rem;
    color: var(--text-muted);
    margin-top: 0.5rem;
}


.delete-btn {
    background: none;
    border: none;
    color: var(--danger-color);
    cursor: pointer;
    font-size: 1.3rem;
    padding: 0 0.5rem;
    border-radius: 50%;
    transition: background 0.2s;
}
.delete-btn:hover {
    background: var(--danger-color);
    color: var(--white-color);
}


.add-card-btn {
    width: 100%;
    padding: 0.6rem;
    background: var(--primary-color);
    border: none;
    color: var(--white-color);
    border-radius: 8px;
    cursor: pointer;
    font-weight: 600;
    font-size: 1rem;
    margin-top: 0.5rem;
    box-shadow: 0 1px 4px 0 rgba(0,0,0,0.04);
    transition: background 0.2s, color 0.2s;
}
.add-card-btn:hover {
    background: var(--secondary-color);
    color: var(--white-color);
}

@media (max-width: 900px) {
    .kanban-columns {
        flex-direction: column;
        gap: 1rem;
    }
    .kanban-column {
        min-width: 0;
    }
    .kanban-section {
        padding: 1rem 0.5rem;
    }
}

/* === Modo responsive (Bootstrap-friendly) === */

/* En pantallas pequeñas: más espacio entre filas y texto más chico */
@media (max-width: 576px) {
  .chips {
    gap: 6px;
    justify-content: center;
  }

  .chip {
    font-size: 0.8rem;
    padding: 5px 12px;
    padding-right: 21px;
  }
}

/* En pantallas muy chicas: los chips ocupan toda la línea si hace falta */
@media (max-width: 400px) {
  .chip {
    flex: 1 1 auto;
    text-align: center;
  }
}



/* adaptaciones para calendario en pantallas pequeñas */
@media (max-width: 720px) {
  .calendar { grid-template-columns: repeat(2, 1fr); }
  .weekdays { display:none; }
}

/* Small responsive helpers */
@media (max-width: 960px) {
  /* header offset moved into consolidated :root */
}

/* Mobile offcanvas (hamburger menu) styling */
#mobileSidebar.offcanvas {
  --bs-offcanvas-width: 280px; /* default width */
}
#mobileSidebar .offcanvas-header {
  background: linear-gradient(90deg, var(--primary-color), var(--secondary-color));
  color: var(--white-color);
}
#mobileSidebar .offcanvas-title {
  color: var(--white-color); font-weight:600;
}
#mobileSidebar .btn-close {
  filter: invert(1) brightness(1.4);
  opacity: 0.95;
}
#mobileSidebar .offcanvas-body {
  background: var(--card-bg);
  padding: 1rem 0.8rem;
}
#mobileSidebar nav a {
  display: block;
  padding: 0.6rem 0.75rem;
  border-radius: 8px;
  color: var(--text-color);
  text-decoration: none;
  transition: background 0.15s, color 0.15s, transform 0.12s;
}
#mobileSidebar nav a:hover {
  background: linear-gradient(90deg, color-mix(in srgb, var(--primary-color) 90%, white 10%), var(--primary-color));
  color: var(--white-color);
  transform: translateY(-2px);
}

/* Hamburger button styles (active state when aria-expanded=true) */
.menu-toggle {
  display:inline-flex; align-items:center; justify-content:center; width:40px; height:40px; border-radius:8px; border:1px solid rgba(0,0,0,0.08); background:transparent; color:var(--text-color); font-size:1.05rem; cursor:pointer;
}
.menu-toggle[aria-expanded="true"] {
  background: var(--primary-color);
  color: var(--white-color);
  border-color: var(--primary-color);
  box-shadow: 0 6px 18px rgba(0,0,0,0.12);
}

/* Ensure offcanvas content scrolls nicely */
#mobileSidebar .offcanvas-body { overflow-y: auto; max-height: calc(100vh - 80px); }

/* Override: remove z-index from Bootstrap modal backdrop so it doesn't cover fixed UI layers */
.modal-backdrop {
  z-index: auto !important;
}

/* Consolidated HSL palette (last-in-file authoritative) */
:root {
  /* H SL components */
  --h-primary: 210 100% 50%;
  --h-secondary: 174 63% 44%;
  --h-accent: 45 100% 60%;
  --h-text: 210 8% 13%;
  --h-bg: 210 40% 97%;
  --h-card-bg: 0 0% 100%;
  --h-border: 210 16% 90%;
  --h-success: 134 61% 41%;
  --h-danger: 1 70% 52%;

  /* Derived colors in hsl() form - used across the sheet */
  --primary-color: hsl(var(--h-primary));
  --secondary-color: hsl(var(--h-secondary));
  --accent-color: hsl(var(--h-accent));
  --text-color: hsl(var(--h-text));
  --bg-color: hsl(var(--h-bg));
  --card-bg: hsl(var(--h-card-bg));
  --border-color: hsl(var(--h-border));
  --success-color: hsl(var(--h-success));
  --danger-color: hsl(var(--h-danger));

  --white-color: hsl(0 0% 100%);
  --black-color: hsl(0 0% 0%);
  --muted-color: hsl(210 10% 90%);
  --light-gray: hsl(0 0% 96%);
  --header-offset: 72px;
}